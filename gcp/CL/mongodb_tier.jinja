{% import "path_utils.jinja" as path_utils with context %}

{% set instanceCount = properties["instanceCount"] %}
{% set deployment = env["deployment"] %}
{% set name = "%s-iw-tmpl" % env["name"] %}
{% set instanceName = "%s-iw-metadata" % deployment %}
{% set zone = properties["zone"] %}
{% set machineType = properties["machineType"] %}
{% set network = path_utils.networkPath(properties["network"]) %}
{% set subnetwork = properties["subnetwork"] %}
{% set bootDiskType = properties["bootDiskType"] %}
{% set bootDiskSizeGb = properties["bootDiskSizeGb"] %}
{% set hasExternalIP = properties["externalIP"] != "None" %}
{# Software status only works if the VM has an external IP. #}
{% set enableStatusWaiter = hasExternalIP %}
{% if instanceCount <= 0 %}
resources: []
{% else %}
resources:
  {% for vmIndex in range(instanceCount) %}
  - name: {{ name }}-{{ vmIndex }}
    type: vm_instance.py
    properties:
      instanceName: {{ instanceName }}-{{ vmIndex }}
      sourceImage: https://www.googleapis.com/compute/v1/projects/click-to-deploy-images/global/images/mongodb-v20180116
      zone: {{ zone }}
      machineType: {{ machineType }}
      network: {{ network }}
      {% if subnetwork %}
      subnetwork: {{ subnetwork }}
      {% endif %}
      bootDiskType: {{ bootDiskType }}
      bootDiskSizeGb: {{ bootDiskSizeGb }}
      disks:
        - deviceName: {{ instanceName }}-{{ vmIndex }}-data
          type: PERSISTENT
          diskType: {{ properties["servers_disk_data_type"] }}
          diskSizeGb: {{ properties["servers_disk_data_sizeGb"] }}
          boot: False
          autoDelete: True
      hasExternalIP: {{ hasExternalIP }}
      serviceAccounts:
        - email: default
          scopes:
            - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
            - 'https://www.googleapis.com/auth/devstorage.read_only'
            - 'https://www.googleapis.com/auth/logging.write'
            - 'https://www.googleapis.com/auth/monitoring.write'
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      metadata:
        items:
          {% if enableStatusWaiter %}
          - key: status-config-url
            value: $(ref.software-status.config-url)
          - key: status-variable-path
            value: $(ref.software-status.variable-path)
          - key: status-uptime-deadline
            value: 300
          {% endif %}
          - key: is_mongodb_server
            value: 'True'
          - key: is_mongodb_arbiter
            value: 'False'
          - key: mongodb_servers
            {% set delimiter = joiner(" ") %}
            value: {% for vmIndex in range(properties["servers_instanceCount"]) -%}
              {{- delimiter() }}{{ instanceName }}-{{ vmIndex -}}
            {%- endfor %}
          - key: mongodb_arbiters
            {% set delimiter = joiner(" ") %}
            value: {% for vmIndex in range(properties["arbiters_instanceCount"]) -%}
              {{- delimiter() }}{{ env["deployment"] }}-iw-arbiters-{{ vmIndex -}}
            {%- endfor %}
          - key: mongodb_replicaset_name
            value: |-
                   {{ properties["input_replicaSetName"] }}
          - key: startup-script
            value: |
              {{ imports['mongodb.sh']| indent(15) }}
      tags:
        items:
          - {{ env["deployment"] }}-deployment
          - {{ env["deployment"] }}-servers-tier
  {% endfor %}
  {% if enableStatusWaiter %}
  {% if instanceCount > 0 %}
  - name: software-status
    type: software_status.py
    properties:
      timeout: 300
      prefix: {{ env['deployment'] }}-iw
      waiterDependsOn:
        {% for vmIndex in range(instanceCount) %}
        - {{ instanceName }}-{{ vmIndex }}
        {% endfor %}
      {% if instanceCount > 1 %}
      successNumber: {{ instanceCount }}
      {% endif %}
  {% endif %}
  {% endif %}

outputs:
  {% for vmIndex in range(instanceCount) %}
  - name: vmId{{ vmIndex }}
    value: $(ref.{{ instanceName }}-{{ vmIndex }}.id)
  - name: vmInternalIP{{ vmIndex }}
    value: $(ref.{{ name }}-{{ vmIndex }}.internalIP)
  - name: vmName{{ vmIndex }}
    value: {{ instanceName }}-{{ vmIndex }}
  - name: vmSelfLink{{ vmIndex }}
    value: $(ref.{{ instanceName }}-{{ vmIndex }}.selfLink)
  {% endfor %}
{% endif %}